
hierarchy
=========

.. graphviz::

   digraph hierarchy {
      rankdir="LR";
      fontsize="40pt"
      concentrate=true;
      overlap=false;
      packMode="node";
      outputorder="edgesfirst";
      node [shape=box,fontsize=24];
      "any":e -> "onion":w;
      "any":e -> "onionhandler":w;
      "any":e -> "onionrequest":w;
      "stream":e -> "onionresponse":w;
      "any":e -> "onionstate":w;
      "any":e -> "onionurl":w;
      "any":e -> "onionwebsocket":w;
      "sequence":e -> "bitset":w;
      "any":e -> "prolog":w;
      "sequence":e -> "term":w;
      "any":e -> "atom":w;
      "any":e -> "variable":w;
      "any":e -> "query":w;
      "any":e -> "pluginclass":w;
      "any":e -> "plugin":w;
      "any":e -> "port":w;
      "any":e -> "instance":w;
      "any":e -> "raschemaindex":w;
      "any":e -> "rainstance":w;
      "any":e -> "raschema":w;
      "any":e -> "ralistener":w;
      "any":e -> "space":w;
      "any":e -> "parser":w;
      "parser":e -> "parser::string":w;
      "parser":e -> "parser::value":w;
      "parser::value":e -> "parser::named":w;
      "any":e -> "cleri":w;
      "any":e -> "cleriparse":w;
      "function":e -> "clerigrammar":w;
      "any":e -> "socket":w;
      "enum":e -> "sockettype":w;
      "enum":e -> "socketevent":w;
      "any":e -> "frame":w;
      "sequence":e -> "message":w;
      "any":e -> "curl":w;
      "enum":e -> "curloption":w;
      "function":e -> "logger":w;
      "any":e -> "category":w;
      "stream::fd":e -> "terminal":w;
      "enum":e -> "iflag":w;
      "enum":e -> "oflag":w;
      "enum":e -> "cflag":w;
      "enum":e -> "lflag":w;
      "any":e -> "attrs":w;
      "any":e -> "object":w;
      "object":e -> "graph":w;
      "enum":e -> "graphdesc":w;
      "object":e -> "node":w;
      "object":e -> "edge":w;
      "any":e -> "context":w;
      "any":e -> "geometry":w;
      "any":e -> "tree":w;
      "flags":e -> "Flag":w;
      "any":e -> "node":w;
      "sequence":e -> "nodelist":w;
      "any":e -> "nodeiter":w;
      "any":e -> "cssselectors":w;
      "node":e -> "element":w;
      "any":e -> "attribute":w;
      "sequence":e -> "attrlist":w;
      "any":e -> "attriter":w;
      "node":e -> "document":w;
      "any":e -> "csv":w;
      "any":e -> "uev":w;
      "flags":e -> "uevflags":w;
      "any":e -> "uevevent":w;
      "any":e -> "uvfile":w;
      "any":e -> "eventbase":w;
      "any":e -> "event":w;
      "any":e -> "eventhttp":w;
      "any":e -> "connection":w;
      "object":e -> "source":w;
      "stream":e -> "md5":w;
      "stream":e -> "ripemd160":w;
      "stream":e -> "sha1":w;
      "stream":e -> "sha224":w;
      "stream":e -> "sha256":w;
      "stream":e -> "sha384":w;
      "stream":e -> "sha512":w;
      "flags":e -> "sqlite::open":w;
      "any":e -> "sqlite":w;
      "sequence":e -> "sqlite::stmt":w;
      "any":e -> "versionstore":w;
      "any":e -> "fixedstore":w;
      "any":e -> "stringstore":w;
      "stream":e -> "stringstorewriter":w;
      "stream":e -> "stringstorereader":w;
      "any":e -> "cborstore":w;
      "any":e -> "stringindex":w;
      "any":e -> "uuidindex":w;
      "any":e -> "connection":w;
      "function":e -> "statement":w;
      "any":e -> "fdbdatabase":w;
      "any":e -> "fdbtransaction":w;
      "any":e -> "dqlite":w;
   }

